<html>
<head>
<title>print_graphmatrix.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#008000> * 图Graph</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> Tv, <font color=#0000FF>typename</font> Te<font color=#AA5500>&gt;</font> <font color=#008000>//顶点类型、边类型</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span><font color=#0000FF>void</font> UniPrint::p ( GraphMatrix<font color=#AA5500>&lt;</font>Tv, Te&gt;& s ) { <font color=#008000>//引用</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   Rank inD <font color=#AA5500>=</font> 0; <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> s.n; i++ ) inD += s.inDegree ( i );
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>   Rank outD <font color=#AA5500>=</font> 0; <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> s.n; i++ ) outD += s.outDegree ( i );
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>   printf ( <font color=#FF00FF>"%s[%d]*(%d, %d):\n"</font>, <font color=#0000FF>typeid</font> ( s ).name(), (<font color=#0000FF>int</font>) &s, s.n, s.e ); <font color=#008000>//基本信息</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span><font color=#008000>// 标题行</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>   print ( s.n ); printf ( <font color=#FF00FF>" "</font> ); print ( inD ); printf ( <font color=#FF00FF>"|"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>   <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> s.n; i++ ) { print ( s.vertex ( i ) ); printf ( <font color=#FF00FF>"["</font> ); print ( s.status ( i ) ); printf ( <font color=#FF00FF>"] "</font> ); }
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>   printf ( <font color=#FF00FF>"\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>13 </span><font color=#008000>// 标题行（续）</font>
<span class="line_num"><font color=#e8e8e8>00</font>14 </span>   print ( outD ); printf ( <font color=#FF00FF>" "</font> ); print ( s.e ); printf ( <font color=#FF00FF>"|"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>15 </span>   <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> s.n; i++ ) { print ( s.inDegree ( i ) ); printf ( <font color=#FF00FF>" "</font> ); }
<span class="line_num"><font color=#e8e8e8>00</font>16 </span>   printf ( <font color=#FF00FF>"| dTime fTime Parent Weight\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>17 </span><font color=#008000>// 水平分隔线</font>
<span class="line_num"><font color=#e8e8e8>00</font>18 </span>   printf ( <font color=#FF00FF>"-----------+"</font> ); <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> s.n; i++ ) printf ( <font color=#FF00FF>"------"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>19 </span>   printf ( <font color=#FF00FF>"+----------------------------\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>20 </span><font color=#008000>// 逐行输出各顶点</font>
<span class="line_num"><font color=#e8e8e8>00</font>21 </span>   <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> s.n; i++ ) {
<span class="line_num"><font color=#e8e8e8>00</font>22 </span>      print ( s.vertex ( i ) ); printf ( <font color=#FF00FF>"["</font> ); print ( s.status ( i ) ); printf ( <font color=#FF00FF>"] "</font> ); print ( s.outDegree ( i ) ); printf ( <font color=#FF00FF>"|"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>23 </span>      <font color=#0000FF>for</font> ( Rank j <font color=#AA5500>=</font> 0; j <font color=#AA5500>&lt;</font> s.n; j++ )
<span class="line_num"><font color=#e8e8e8>00</font>24 </span>         <font color=#0000FF>if</font> ( s.exists ( i, j ) ) { print ( s.edge ( i, j ) ); print ( s.type ( i, j ) ); }
<span class="line_num"><font color=#e8e8e8>00</font>25 </span>         <font color=#0000FF>else</font> printf ( <font color=#FF00FF>"     ."</font> );
<span class="line_num"><font color=#e8e8e8>00</font>26 </span>      printf ( <font color=#FF00FF>"| "</font> ); print ( s.dTime ( i ) ); printf ( <font color=#FF00FF>" "</font> ); print ( s.fTime ( i ) );
<span class="line_num"><font color=#e8e8e8>00</font>27 </span>      printf ( <font color=#FF00FF>"     "</font> ); <font color=#0000FF>if</font> ( -1 == s.parent ( i ) ) print ( <font color=#FF00FF>"^"</font> ); <font color=#0000FF>else</font> print ( s.vertex ( s.parent ( i ) ) );
<span class="line_num"><font color=#e8e8e8>00</font>28 </span>      printf ( <font color=#FF00FF>"  "</font> ); <font color=#0000FF>if</font> ( INT_MAX <font color=#AA5500>&gt;</font> s.priority ( i ) ) print ( s.priority ( i ) ); <font color=#0000FF>else</font> print ( <font color=#FF00FF>" INF"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>29 </span>      printf ( <font color=#FF00FF>"\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>30 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>31 </span>   printf ( <font color=#FF00FF>"\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>32 </span>}
</b></p></pre>
</body>
</html>
