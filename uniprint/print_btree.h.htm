<html>
<head>
<title>print_btree.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#008000> * BTree输出打印</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#800080>#include "Bitmap/Bitmap.h" </font><font color=#008000>//使用位图记录分支转向</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span><font color=#008000> * BTree打印（入口）</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#008000>//元素类型</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span><font color=#0000FF>void</font> UniPrint::p ( BTree<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> & bt ) { <font color=#008000>//引用</font>
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>   printf ( <font color=#FF00FF>"%s[%d]*%d:\n"</font>, <font color=#0000FF>typeid</font> ( bt ).name(), (<font color=#0000FF>int</font>) &bt, bt.size() ); <font color=#008000>//基本信息</font>
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>   Bitmap<font color=#AA5500>*</font> leftmosts <font color=#AA5500>=</font> <font color=#0000FF>new</font> Bitmap; <font color=#008000>//记录当前节点祖先的方向</font>
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>   Bitmap<font color=#AA5500>*</font> rightmosts <font color=#AA5500>=</font> <font color=#0000FF>new</font> Bitmap; <font color=#008000>//记录当前节点祖先的方向</font>
<span class="line_num"><font color=#e8e8e8>00</font>14 </span>   printBTree ( bt.root(), 0, <font color=#0000FF>true</font>, <font color=#0000FF>true</font>, leftmosts, rightmosts ); <font color=#008000>//输出树状结构</font>
<span class="line_num"><font color=#e8e8e8>00</font>15 </span>   release ( leftmosts ); release ( rightmosts ); printf ( <font color=#FF00FF>"\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>16 </span>}
<span class="line_num"><font color=#e8e8e8>00</font>17 </span>
<span class="line_num"><font color=#e8e8e8>00</font>18 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>00</font>19 </span><font color=#008000> * BTree打印（递归）</font>
<span class="line_num"><font color=#e8e8e8>00</font>20 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>00</font>21 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#008000>//元素类型</font>
<span class="line_num"><font color=#e8e8e8>00</font>22 </span><font color=#0000FF>static</font> <font color=#0000FF>void</font> printBTree ( BTNodePosi<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> bt, <font color=#0000FF>int</font> depth, <font color=#0000FF>bool</font> isLeftmost, <font color=#0000FF>bool</font> isRightmost, Bitmap<font color=#AA5500>*</font> leftmosts, Bitmap<font color=#AA5500>*</font> rightmosts ) {
<span class="line_num"><font color=#e8e8e8>00</font>23 </span>   <font color=#0000FF>if</font> ( !bt ) <font color=#0000FF>return</font>;
<span class="line_num"><font color=#e8e8e8>00</font>24 </span>   isLeftmost ? leftmosts-<font color=#AA5500>&gt;</font>set ( depth ) : leftmosts-<font color=#AA5500>&gt;</font>clear ( depth ); <font color=#008000>//设置或清除当前层的拐向标志</font>
<span class="line_num"><font color=#e8e8e8>00</font>25 </span>   isRightmost ? rightmosts-<font color=#AA5500>&gt;</font>set ( depth ) : rightmosts-<font color=#AA5500>&gt;</font>clear ( depth ); <font color=#008000>//设置或清除当前层的拐向标志</font>
<span class="line_num"><font color=#e8e8e8>00</font>26 </span>   <font color=#0000FF>int</font> k <font color=#AA5500>=</font> bt-<font color=#AA5500>&gt;</font>child.size() <font color=#AA5500>-</font> 1; <font color=#008000>//找到当前节点的最右侧孩子，并</font>
<span class="line_num"><font color=#e8e8e8>00</font>27 </span>   printBTree ( bt-<font color=#AA5500>&gt;</font>child<font color=#AA5500>[</font>k], depth <font color=#AA5500>+</font> 1, <font color=#0000FF>false</font>, <font color=#0000FF>true</font>, leftmosts, rightmosts ); <font color=#008000>//递归输出之</font>
<span class="line_num"><font color=#e8e8e8>00</font>28 </span>   <font color=#0000FF>while</font> ( 0 <font color=#AA5500>&lt;</font> k-- ) { <font color=#008000>//自右向左，输出各子树及其右侧的关键码</font>
<span class="line_num"><font color=#e8e8e8>00</font>29 </span>      print ( bt-<font color=#AA5500>&gt;</font>key<font color=#AA5500>[</font>k<font color=#AA5500>]</font> ); printf ( <font color=#FF00FF>" *&gt;"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>30 </span>      <font color=#0000FF>for</font> ( <font color=#0000FF>int</font> i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> depth; i++ ) <font color=#008000>//根据相邻各层</font>
<span class="line_num"><font color=#e8e8e8>00</font>31 </span>         ( leftmosts-<font color=#AA5500>&gt;</font>test ( i ) && leftmosts-<font color=#AA5500>&gt;</font>test ( i <font color=#AA5500>+</font> 1 ) || rightmosts-<font color=#AA5500>&gt;</font>test ( i ) && rightmosts-<font color=#AA5500>&gt;</font>test ( i <font color=#AA5500>+</font> 1 ) ) ? <font color=#008000>//的拐向是否一致，即可确定</font>
<span class="line_num"><font color=#e8e8e8>00</font>32 </span>         printf ( <font color=#FF00FF>"      "</font> ) : printf ( <font color=#FF00FF>"│    "</font> ); <font color=#008000>//是否应该打印横向联接线</font>
<span class="line_num"><font color=#e8e8e8>00</font>33 </span>      <font color=#0000FF>if</font> ( ( ( 0 == depth && 1 <font color=#AA5500>&lt;</font> bt-<font color=#AA5500>&gt;</font>key.size() ) || !isLeftmost && isRightmost ) && bt-<font color=#AA5500>&gt;</font>key.size() <font color=#AA5500>-</font> 1 == k ) printf ( <font color=#FF00FF>"┌─"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>34 </span>      <font color=#0000FF>else</font> <font color=#0000FF>if</font> ( ( ( 0 == depth && 1 <font color=#AA5500>&lt;</font> bt-<font color=#AA5500>&gt;</font>key.size() ) || isLeftmost && !isRightmost ) && 0 == k )            printf ( <font color=#FF00FF>"└─"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>35 </span>      <font color=#0000FF>else</font>                                                                                               printf ( <font color=#FF00FF>"├─"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>36 </span>      print ( bt-<font color=#AA5500>&gt;</font>key<font color=#AA5500>[</font>k<font color=#AA5500>]</font> ); printf ( <font color=#FF00FF>"\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>37 </span>      printBTree ( bt-<font color=#AA5500>&gt;</font>child<font color=#AA5500>[</font>k], depth <font color=#AA5500>+</font> 1, 0 == k, <font color=#0000FF>false</font>, leftmosts, rightmosts ); <font color=#008000>//递归输出子树</font>
<span class="line_num"><font color=#e8e8e8>00</font>38 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>39 </span>}
</b></p></pre>
</body>
</html>
