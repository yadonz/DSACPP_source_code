<html>
<head>
<title>convert.cpp</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>void</font> convert ( Stack<font color=#AA5500>&lt;</font><font color=#0000FF>char</font>&gt;& S, __int64 n, <font color=#0000FF>int</font> base ) { <font color=#008000>//整数n的1&lt;base&lt;=16进制打印（迭代版）</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span>   <font color=#0000FF>char</font> digit[] <font color=#AA5500>=</font> <font color=#FF00FF>"0123456789ABCDEF"</font>; <font color=#008000>//数位符号，如有必要可相应扩充</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   <font color=#0000FF>while</font> ( n <font color=#AA5500>&gt;</font> 0 ) { <font color=#008000>//由低到高，逐一计算出新进制下的各数位</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>      S.push ( digit<font color=#AA5500>[</font> n % base <font color=#AA5500>]</font> ); <font color=#008000>//余数（当前位）入栈</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>      n /= base; <font color=#008000>//n更新为其对base的除商</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   }
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>} <font color=#008000>//新进制下由高到低的各数位，自顶而下保存于栈S中</font>
</b></p></pre>
</body>
</html>
