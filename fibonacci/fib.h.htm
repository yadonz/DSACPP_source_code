<html>
<head>
<title>fib.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>class</font> Fib { <font color=#008000>//Fibonacci数列类</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#0000FF>private</font>:
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   Rank f, g; <font color=#008000>//f = fib(k - 1), g = fib(k)。均为int型，很快就会数值溢出</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#0000FF>public</font>:
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>   Fib ( Rank n ) <font color=#008000>//初始化为不小于n的最小Fibonacci项</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   { f <font color=#AA5500>=</font> 1; g <font color=#AA5500>=</font> 0; <font color=#0000FF>while</font> ( g <font color=#AA5500>&lt;</font> n ) next(); } <font color=#008000>//fib(-1), fib(0)，O(log_phi(n))时间</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>   Rank get()  { <font color=#0000FF>return</font> g; } <font color=#008000>//获取当前Fibonacci项，O(1)时间</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>   Rank next() { g += f; f <font color=#AA5500>=</font> g <font color=#AA5500>-</font> f; <font color=#0000FF>return</font> g; } <font color=#008000>//转至下一Fibonacci项，O(1)时间</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>   Rank prev() { f <font color=#AA5500>=</font> g <font color=#AA5500>-</font> f; g <font color=#AA5500>-</font><font color=#AA5500>=</font> f; <font color=#0000FF>return</font> g; } <font color=#008000>//转至上一Fibonacci项，O(1)时间</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>};
</b></p></pre>
</body>
</html>
