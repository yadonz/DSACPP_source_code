<html>
<head>
<title>btree_remove.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#0000FF>bool</font> BTree<font color=#AA5500>&lt;</font>T&gt;::remove( <font color=#0000FF>const</font> T& e ) { <font color=#008000>//从BTree树中删除关键码e</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span>   BTNodePosi<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> v <font color=#AA5500>=</font> search( e ); <font color=#0000FF>if</font> ( !v ) <font color=#0000FF>return</font> <font color=#0000FF>false</font>; <font color=#008000>//确认目标关键码存在</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   Rank r <font color=#AA5500>=</font> v-<font color=#AA5500>&gt;</font>key.search( e ); <font color=#008000>//确定目标关键码在节点v中的秩（由上，肯定合法）</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>   <font color=#0000FF>if</font> ( v-<font color=#AA5500>&gt;</font>child<font color=#AA5500>[</font>0<font color=#AA5500>]</font> ) { <font color=#008000>//若v非叶子，则e的后继必属于某叶节点</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>      BTNodePosi<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> u <font color=#AA5500>=</font> v-<font color=#AA5500>&gt;</font>child<font color=#AA5500>[</font>r <font color=#AA5500>+</font> 1]; <font color=#008000>//在右子树中一直向左，即可</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>      <font color=#0000FF>while</font> ( u-<font color=#AA5500>&gt;</font>child<font color=#AA5500>[</font>0<font color=#AA5500>]</font> ) u <font color=#AA5500>=</font> u-<font color=#AA5500>&gt;</font>child<font color=#AA5500>[</font>0]; <font color=#008000>//找出e的后继</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>      v-<font color=#AA5500>&gt;</font>key<font color=#AA5500>[</font>r<font color=#AA5500>]</font> <font color=#AA5500>=</font> u-<font color=#AA5500>&gt;</font>key<font color=#AA5500>[</font>0]; v <font color=#AA5500>=</font> u; r <font color=#AA5500>=</font> 0; <font color=#008000>//并与之交换位置</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>   } <font color=#008000>//至此，v必然位于最底层，且其中第r个关键码就是待删除者</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>   v-<font color=#AA5500>&gt;</font>key.remove( r ); v-<font color=#AA5500>&gt;</font>child.remove( r <font color=#AA5500>+</font> 1 ); _size--; <font color=#008000>//删除e，以及其下两个外部节点之一</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>   solveUnderflow( v ); <font color=#008000>//如有必要，需做旋转或合并</font>
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>   <font color=#0000FF>return</font> <font color=#0000FF>true</font>;
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>}
</b></p></pre>
</body>
</html>
