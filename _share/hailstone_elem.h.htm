<html>
<head>
<title>hailstone_elem.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#0000FF>struct</font> Hailstone { <font color=#008000>//函数对象：按照Hailstone规则转化一个T类对象</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span>   <font color=#0000FF>virtual</font> <font color=#0000FF>void</font> <font color=#0000FF>operator</font>()( T& e ) { <font color=#008000>//假设T可直接做算术运算</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>      <font color=#0000FF>int</font> step <font color=#AA5500>=</font> 0; <font color=#008000>//转换所需步数</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>      <font color=#0000FF>while</font> ( 1 != e ) { <font color=#008000>//按奇、偶逐步转换，直至为1</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>         ( e % 2 ) ? e <font color=#AA5500>=</font> 3 <font color=#AA5500>*</font> e <font color=#AA5500>+</font> 1 : e /= 2;
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>         step++;
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>      }
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>      e <font color=#AA5500>=</font> step; <font color=#008000>//返回转换所经步数</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>};
</b></p></pre>
</body>
</html>
