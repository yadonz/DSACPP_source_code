<html>
<head>
<title>bitmap.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>class</font> Bitmap { <font color=#008000>//位图Bitmap类</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#0000FF>private</font>:
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   <font color=#0000FF>unsigned</font> <font color=#0000FF>char</font><font color=#AA5500>*</font> M;
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>   Rank N, _sz; <font color=#008000>//位图空间M[]，N*sizeof(char)*8个比特中含_sz个有效位</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span><font color=#0000FF>protected</font>:
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   <font color=#0000FF>void</font> init( Rank n )
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>      { M <font color=#AA5500>=</font> <font color=#0000FF>new</font> <font color=#0000FF>unsigned</font> <font color=#0000FF>char</font><font color=#AA5500>[</font>N <font color=#AA5500>=</font> ( n <font color=#AA5500>+</font> 7 ) / 8]; memset( M, 0, N ); _sz <font color=#AA5500>=</font> 0; }
<span class="line_num"><font color=#e8e8e8>000</font>8 </span><font color=#0000FF>public</font>:
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>   Bitmap( Rank n <font color=#AA5500>=</font> 8 ) { init( n ); } <font color=#008000>//按指定容量创建位图（为测试暂时选用较小的默认值）</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>   Bitmap( <font color=#0000FF>char</font><font color=#AA5500>*</font> file, Rank n <font color=#AA5500>=</font> 8 ) { <font color=#008000>//按指定或默认规模，从指定文件中读取位图</font>
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>      init( n );
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>      FILE<font color=#AA5500>*</font> fp <font color=#AA5500>=</font> fopen( file, <font color=#FF00FF>"r"</font> ); fread( M, <font color=#0000FF>sizeof</font>( <font color=#0000FF>char</font> ), N, fp ); fclose( fp );
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>      <font color=#0000FF>for</font> ( Rank k <font color=#AA5500>=</font> 0, _sz <font color=#AA5500>=</font> 0; k <font color=#AA5500>&lt;</font> n; k++ ) _sz += test(k);
<span class="line_num"><font color=#e8e8e8>00</font>14 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>15 </span>   ~Bitmap() { <font color=#0000FF>delete</font>[] M; M <font color=#AA5500>=</font> NULL; _sz <font color=#AA5500>=</font> 0; } <font color=#008000>//析构时释放位图空间</font>
<span class="line_num"><font color=#e8e8e8>00</font>16 </span>
<span class="line_num"><font color=#e8e8e8>00</font>17 </span>   Rank size() { <font color=#0000FF>return</font> _sz; }
<span class="line_num"><font color=#e8e8e8>00</font>18 </span>   <font color=#0000FF>void</font> set   ( Rank k ) { expand( k ); _sz++; M<font color=#AA5500>[</font>k &gt;&gt; 3<font color=#AA5500>]</font> |=   ( 0x80 &gt;&gt; ( k & 0x07 ) ); }
<span class="line_num"><font color=#e8e8e8>00</font>19 </span>   <font color=#0000FF>void</font> clear ( Rank k ) { expand( k ); _sz--; M<font color=#AA5500>[</font>k &gt;&gt; 3<font color=#AA5500>]</font> &= ~ ( 0x80 &gt;&gt; ( k & 0x07 ) ); }
<span class="line_num"><font color=#e8e8e8>00</font>20 </span>   <font color=#0000FF>bool</font> test  ( Rank k ) { expand( k ); <font color=#0000FF>return</font> M<font color=#AA5500>[</font>k &gt;&gt; 3<font color=#AA5500>]</font> &    ( 0x80 &gt;&gt; ( k & 0x07 ) ); }
<span class="line_num"><font color=#e8e8e8>00</font>21 </span>
<span class="line_num"><font color=#e8e8e8>00</font>22 </span>   <font color=#0000FF>void</font> dump( <font color=#0000FF>char</font><font color=#AA5500>*</font> file ) <font color=#008000>//将位图整体导出至指定的文件，以便对此后的新位图批量初始化</font>
<span class="line_num"><font color=#e8e8e8>00</font>23 </span>   { FILE<font color=#AA5500>*</font> fp <font color=#AA5500>=</font> fopen( file, <font color=#FF00FF>"w"</font> ); fwrite( M, <font color=#0000FF>sizeof</font> ( <font color=#0000FF>char</font> ), N, fp ); fclose( fp ); }
<span class="line_num"><font color=#e8e8e8>00</font>24 </span>   <font color=#0000FF>char</font><font color=#AA5500>*</font> bits2string( Rank n ) { <font color=#008000>//将前n位转换为字符串――</font>
<span class="line_num"><font color=#e8e8e8>00</font>25 </span>      expand( n <font color=#AA5500>-</font> 1 ); <font color=#008000>//此时可能被访问的最高位为bitmap[n - 1]</font>
<span class="line_num"><font color=#e8e8e8>00</font>26 </span>      <font color=#0000FF>char</font><font color=#AA5500>*</font> s <font color=#AA5500>=</font> <font color=#0000FF>new</font> <font color=#0000FF>char</font><font color=#AA5500>[</font>n <font color=#AA5500>+</font> 1]; s<font color=#AA5500>[</font>n<font color=#AA5500>]</font> <font color=#AA5500>=</font> <font color=#FF00FF>'&#92;0'</font>; <font color=#008000>//字符串所占空间，由上层调用者负责释放</font>
<span class="line_num"><font color=#e8e8e8>00</font>27 </span>      <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> n; i++ ) s<font color=#AA5500>[</font>i<font color=#AA5500>]</font> <font color=#AA5500>=</font> test( i ) ? <font color=#FF00FF>'1'</font> : <font color=#FF00FF>'0'</font>;
<span class="line_num"><font color=#e8e8e8>00</font>28 </span>      <font color=#0000FF>return</font> s; <font color=#008000>//返回字符串位置</font>
<span class="line_num"><font color=#e8e8e8>00</font>29 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>30 </span>   <font color=#0000FF>void</font> expand( Rank k ) { <font color=#008000>//若被访问的Bitmap[k]已出界，则需扩容</font>
<span class="line_num"><font color=#e8e8e8>00</font>31 </span>      <font color=#0000FF>if</font> ( k <font color=#AA5500>&lt;</font> 8 <font color=#AA5500>*</font> N ) <font color=#0000FF>return</font>; <font color=#008000>//仍在界内，无需扩容</font>
<span class="line_num"><font color=#e8e8e8>00</font>32 </span>      Rank oldN <font color=#AA5500>=</font> N; <font color=#0000FF>unsigned</font> <font color=#0000FF>char</font><font color=#AA5500>*</font> oldM <font color=#AA5500>=</font> M;
<span class="line_num"><font color=#e8e8e8>00</font>33 </span>      init( 2 <font color=#AA5500>*</font> k ); <font color=#008000>//与向量类似，加倍策略</font>
<span class="line_num"><font color=#e8e8e8>00</font>34 </span>      memcpy_s( M, N, oldM, oldN );
<span class="line_num"><font color=#e8e8e8>00</font>35 </span>      <font color=#0000FF>delete</font>[] oldM; <font color=#008000>//原数据转移至新空间</font>
<span class="line_num"><font color=#e8e8e8>00</font>36 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>37 </span>};
</b></p></pre>
</body>
</html>
