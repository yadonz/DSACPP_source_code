<html>
<head>
<title>vector_quicksort_iterative.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#800080>#define Put( K, s, t ) { if ( 1 &lt; (t) - (s) ) { K.push(s); K.push(t); } }</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#800080>#define Get( K, s, t ) { t = K.pop(); s = K.pop(); }</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#008000>//向量快速排序</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span><font color=#0000FF>void</font> Vector<font color=#AA5500>&lt;</font>T&gt;::quickSort( Rank lo, Rank hi ) { <font color=#008000>//0 &lt;= lo &lt; hi &lt;= size</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   Stack<font color=#AA5500>&lt;</font>Rank<font color=#AA5500>&gt;</font> Task; Put( Task, lo, hi ); <font color=#008000>//类似于对递归树的先序遍历</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>   <font color=#0000FF>while</font> ( !Task.empty() ) {
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>      Get( Task, lo, hi );
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>      Rank mi <font color=#AA5500>=</font> partition( lo, hi ); <font color=#008000>//在[lo, hi)内构造轴点</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>      <font color=#0000FF>if</font> ( mi <font color=#AA5500>-</font> lo <font color=#AA5500>&lt;</font> hi <font color=#AA5500>-</font> mi ) { Put( Task, mi<font color=#AA5500>+</font>1, hi ); Put( Task, lo, mi ); }
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>      <font color=#0000FF>else</font>                     { Put( Task, lo, mi ); Put( Task, mi<font color=#AA5500>+</font>1, hi ); }
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>   } <font color=#008000>//大任务优先入栈（小任务优先出栈执行），可保证递归深度（空间成本）不过O(logn)</font>
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>}
</b></p></pre>
</body>
</html>
