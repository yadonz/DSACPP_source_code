<html>
<head>
<title>vector_constructor_by_copying.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#008000>//T为基本类型，或已重载赋值操作符'&#61;'</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#0000FF>void</font> Vector<font color=#AA5500>&lt;</font>T&gt;::copyFrom ( T <font color=#0000FF>const</font><font color=#AA5500>*</font> A, Rank lo, Rank hi ) { <font color=#008000>//以数组区间A[lo, hi)为蓝本复制向量</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   _elem <font color=#AA5500>=</font> <font color=#0000FF>new</font> T<font color=#AA5500>[</font> _capacity <font color=#AA5500>=</font> max<font color=#AA5500>&lt;</font>Rank&gt;( DEFAULT_CAPACITY, 2 <font color=#AA5500>*</font> ( hi <font color=#AA5500>-</font> lo ) ) ]; <font color=#008000>//分配空间</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>   <font color=#0000FF>for</font> ( _size <font color=#AA5500>=</font> 0; lo <font color=#AA5500>&lt;</font> hi; _size++, lo++ ) <font color=#008000>//A[lo, hi)内的元素逐一</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>      _elem<font color=#AA5500>[</font> _size <font color=#AA5500>]</font> <font color=#AA5500>=</font> A<font color=#AA5500>[</font> lo ]; <font color=#008000>//复制至_elem[0, hi - lo)</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>} <font color=#008000>//用const修饰，保证A中的元素不致被篡改；运行时间 = O(hi-lo)</font>
</b></p></pre>
</body>
</html>
