<html>
<head>
<title>vector_deduplicate_wrong_1.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#0000FF>int</font> Vector<font color=#AA5500>&lt;</font>T&gt;::dedup() { <font color=#008000>//删除无序向量中重复元素（错误版）</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span>   <font color=#0000FF>int</font> oldSize <font color=#AA5500>=</font> _size; <font color=#008000>//记录原规模</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   <font color=#0000FF>for</font> ( Rank i <font color=#AA5500>=</font> 1; i <font color=#AA5500>&lt;</font> _size; i++ ) { <font color=#008000>//逐一考查_elem[i]</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>      Rank j <font color=#AA5500>=</font> find ( _elem<font color=#AA5500>[</font>i], 0, i ); <font color=#008000>//在_elem[i]的前驱中寻找与之雷同者（至多一个）</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>      <font color=#0000FF>if</font> ( 0 <font color=#AA5500>&lt;</font>= j ) remove ( j ); <font color=#008000>//若存在，则删除之（但在此种情况，下一迭代不必做i++）</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   }
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>   <font color=#0000FF>return</font> oldSize <font color=#AA5500>-</font> _size; <font color=#008000>//向量规模变化量，即被删除元素总数</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>}
</b></p></pre>
</body>
</html>
