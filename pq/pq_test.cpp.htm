<html>
<head>
<title>pq_test.cpp</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#008000> * Test of PQ_ComplHeap & PQ_LeftHeap</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#800080>#include "PQ_test.h"</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span><font color=#008000>//#include &lt;windows.h&gt;</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span><font color=#008000> * 针对基于列表、向量以及左式堆实现的优先级队列，做过程统一的测试</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> PQ, <font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#0000FF>void</font> testHeap( Rank n ) {
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>   Rank s <font color=#AA5500>=</font> 2<font color=#AA5500>*</font>n/3; T<font color=#AA5500>*</font> A <font color=#AA5500>=</font> <font color=#0000FF>new</font> T<font color=#AA5500>[</font>s]; <font color=#008000>//创建容量为2*n/3的数组，且</font>
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>   <font color=#0000FF>for</font> ( T i <font color=#AA5500>=</font> 0; i <font color=#AA5500>&lt;</font> 2 <font color=#AA5500>*</font> (T)n / 3; i++ ) A<font color=#AA5500>[</font>i<font color=#AA5500>]</font> <font color=#AA5500>=</font> dice( ( T ) 3 <font color=#AA5500>*</font> n ); <font color=#008000>//所有词条随机</font>
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>   PQ heap( A <font color=#AA5500>+</font> n / 6, n / 3 ); <font color=#008000>//批量建堆（PQ_ComplHeap实现了Robert Floyd算法）</font>
<span class="line_num"><font color=#e8e8e8>00</font>14 </span>   <font color=#0000FF>delete</font> [] A;
<span class="line_num"><font color=#e8e8e8>00</font>15 </span>   <font color=#0000FF>while</font> ( heap.size() <font color=#AA5500>&lt;</font> n ) { <font color=#008000>//随机测试</font>
<span class="line_num"><font color=#e8e8e8>00</font>16 </span>      <font color=#0000FF>if</font> ( dice( 100 ) <font color=#AA5500>&lt;</font> 70 ) { <font color=#008000>//70%概率插入新词条</font>
<span class="line_num"><font color=#e8e8e8>00</font>17 </span>         T e <font color=#AA5500>=</font> dice( ( T ) 3 <font color=#AA5500>*</font> n );
<span class="line_num"><font color=#e8e8e8>00</font>18 </span>         heap.insert( e );
<span class="line_num"><font color=#e8e8e8>00</font>19 </span>      } <font color=#0000FF>else</font> { <font color=#008000>//30%概率摘除最大词条</font>
<span class="line_num"><font color=#e8e8e8>00</font>20 </span>         <font color=#0000FF>if</font> ( !heap.empty() ) {
<span class="line_num"><font color=#e8e8e8>00</font>21 </span>            T e <font color=#AA5500>=</font> heap.delMax();
<span class="line_num"><font color=#e8e8e8>00</font>22 </span>         }
<span class="line_num"><font color=#e8e8e8>00</font>23 </span>      }
<span class="line_num"><font color=#e8e8e8>00</font>24 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>25 </span>   <font color=#0000FF>while</font> ( !heap.empty() ) { <font color=#008000>//清空</font>
<span class="line_num"><font color=#e8e8e8>00</font>26 </span>      T e <font color=#AA5500>=</font> heap.delMax();
<span class="line_num"><font color=#e8e8e8>00</font>27 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>28 </span>}
<span class="line_num"><font color=#e8e8e8>00</font>29 </span>
<span class="line_num"><font color=#e8e8e8>00</font>30 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>00</font>31 </span><font color=#008000> * 优先级队列测试</font>
<span class="line_num"><font color=#e8e8e8>00</font>32 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>00</font>33 </span><font color=#0000FF>int</font> main( <font color=#0000FF>int</font> argc, <font color=#0000FF>char</font><font color=#AA5500>*</font> argv[] ) {
<span class="line_num"><font color=#e8e8e8>00</font>34 </span>   <font color=#0000FF>if</font> ( 2 <font color=#AA5500>&gt;</font> argc ) { printf( <font color=#FF00FF>"Usage: %s &lt;size of test&gt;\a\a\n"</font>, argv<font color=#AA5500>[</font>0<font color=#AA5500>]</font> ); <font color=#0000FF>return</font> 1; }
<span class="line_num"><font color=#e8e8e8>00</font>35 </span>   srand((<font color=#0000FF>unsigned</font> <font color=#0000FF>int</font>)time(NULL)); <font color=#008000>//随机种子</font>
<span class="line_num"><font color=#e8e8e8>00</font>36 </span><font color=#008000>   //srand( 31415926 ); //固定种子（假种子，调试用）</font>
<span class="line_num"><font color=#e8e8e8>00</font>37 </span><font color=#800080>#if defined(DSA_PQ_LEFTHEAP)</font>
<span class="line_num"><font color=#e8e8e8>00</font>38 </span>   testHeap<font color=#AA5500>&lt;</font>PQ_LeftHeap<font color=#AA5500>&lt;</font><font color=#0000FF>int</font>&gt;, <font color=#0000FF>int</font>&gt;( atoi ( argv<font color=#AA5500>[</font>1<font color=#AA5500>]</font> ) ); <font color=#008000>//词条类型可以在这里任意选择</font>
<span class="line_num"><font color=#e8e8e8>00</font>39 </span><font color=#800080>#elif defined(DSA_PQ_COMPLHEAP)</font>
<span class="line_num"><font color=#e8e8e8>00</font>40 </span>   testHeap<font color=#AA5500>&lt;</font>PQ_ComplHeap<font color=#AA5500>&lt;</font><font color=#0000FF>int</font>&gt;, <font color=#0000FF>int</font>&gt;( atoi ( argv<font color=#AA5500>[</font>1<font color=#AA5500>]</font> ) ); <font color=#008000>//词条类型可以在这里任意选择</font>
<span class="line_num"><font color=#e8e8e8>00</font>41 </span><font color=#800080>#elif defined(DSA_PQ_LIST)</font>
<span class="line_num"><font color=#e8e8e8>00</font>42 </span>   testHeap<font color=#AA5500>&lt;</font>PQ_List<font color=#AA5500>&lt;</font><font color=#0000FF>int</font>&gt;, <font color=#0000FF>int</font>&gt;( atoi ( argv<font color=#AA5500>[</font>1<font color=#AA5500>]</font> ) ); <font color=#008000>//词条类型可以在这里任意选择</font>
<span class="line_num"><font color=#e8e8e8>00</font>43 </span><font color=#800080>#else</font>
<span class="line_num"><font color=#e8e8e8>00</font>44 </span>   printf( <font color=#FF00FF>"PQ type not defined yet\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>45 </span><font color=#800080>#endif</font>
<span class="line_num"><font color=#e8e8e8>00</font>46 </span>   <font color=#0000FF>return</font> 0;
<span class="line_num"><font color=#e8e8e8>00</font>47 </span>}
</b></p></pre>
</body>
</html>
