<html>
<head>
<title>skiplist.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#800080>#include "List/List.h" </font><font color=#008000>//引入列表</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#800080>#include "Entry/Entry.h" </font><font color=#008000>//引入词条</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#800080>#include "Quadlist.h" </font><font color=#008000>//引入Quadlist</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#800080>#include "Dictionary/Dictionary.h" </font><font color=#008000>//引入词典</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> K, <font color=#0000FF>typename</font> V<font color=#AA5500>&gt;</font> <font color=#008000>//key、value</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span><font color=#008000>//符合Dictionary接口的Skiplist模板类（隐含假设元素之间可比较大小）</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span><font color=#0000FF>struct</font> Skiplist : <font color=#0000FF>public</font> Dictionary<font color=#AA5500>&lt;</font>K, V&gt;, <font color=#0000FF>public</font> List<font color=#AA5500>&lt;</font> Quadlist<font color=#AA5500>&lt;</font> Entry<font color=#AA5500>&lt;</font>K, V<font color=#AA5500>&gt;</font> &gt;<font color=#AA5500>*</font> <font color=#AA5500>&gt;</font> {
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>   Skiplist() { insertAsFirst( <font color=#0000FF>new</font> Quadlist<font color=#AA5500>&lt;</font> Entry<font color=#AA5500>&lt;</font>K, V<font color=#AA5500>&gt;</font> <font color=#AA5500>&gt;</font> ); }; <font color=#008000>//即便为空，也有一层空列表</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>   QNodePosi<font color=#AA5500>&lt;</font> Entry<font color=#AA5500>&lt;</font>K, V<font color=#AA5500>&gt;</font> <font color=#AA5500>&gt;</font> search( K ); <font color=#008000>//由关键码查询词条</font>
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>   Rank size() <font color=#0000FF>const</font> { <font color=#0000FF>return</font> empty() ? 0 : last()<font color=#AA5500>-</font><font color=#AA5500>&gt;</font>data-<font color=#AA5500>&gt;</font>_size; } <font color=#008000>//词条总数</font>
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>   Rank height() { <font color=#0000FF>return</font> List::size(); } <font color=#008000>//层高 == #Quadlist</font>
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>   V<font color=#AA5500>*</font> get( K ); <font color=#008000>//读取</font>
<span class="line_num"><font color=#e8e8e8>00</font>14 </span>   <font color=#0000FF>bool</font> put(K, V); <font color=#008000>//插入（Skiplist允许词条重复，故必然成功）</font>
<span class="line_num"><font color=#e8e8e8>00</font>15 </span>   <font color=#0000FF>bool</font> remove ( K ); <font color=#008000>//删除</font>
<span class="line_num"><font color=#e8e8e8>00</font>16 </span>};
</b></p></pre>
</body>
</html>
