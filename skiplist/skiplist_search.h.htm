<html>
<head>
<title>skiplist_search.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#008000> * Skiplist词条查找算法（供内部调用）</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#008000> * 返回关键码不大于k的最后一个词条（所对应塔的基座）</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> K, <font color=#0000FF>typename</font> V<font color=#AA5500>&gt;</font> QNodePosi<font color=#AA5500>&lt;</font>Entry<font color=#AA5500>&lt;</font>K, V&gt;&gt; Skiplist<font color=#AA5500>&lt;</font>K, V&gt;::search( K k ) {
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   <font color=#0000FF>for</font> ( QNodePosi<font color=#AA5500>&lt;</font>Entry<font color=#AA5500>&lt;</font>K, V&gt;&gt; p <font color=#AA5500>=</font> first()<font color=#AA5500>-</font><font color=#AA5500>&gt;</font>data-<font color=#AA5500>&gt;</font>header; ; ) <font color=#008000>//从顶层Quadlist的首节点p出发</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>      <font color=#0000FF>if</font> ( ( p-<font color=#AA5500>&gt;</font>succ-<font color=#AA5500>&gt;</font>succ ) && ( p-<font color=#AA5500>&gt;</font>succ-<font color=#AA5500>&gt;</font>entry.key <font color=#AA5500>&lt;</font>= k ) ) p <font color=#AA5500>=</font> p-<font color=#AA5500>&gt;</font>succ; <font color=#008000>//尽可能右移</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>      <font color=#0000FF>else</font> <font color=#0000FF>if</font> ( p-<font color=#AA5500>&gt;</font>below ) p <font color=#AA5500>=</font> p-<font color=#AA5500>&gt;</font>below; <font color=#008000>//水平越界时，下移</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>      <font color=#0000FF>else</font> <font color=#0000FF>return</font> p; <font color=#008000>//验证：此时的p符合输出约定（可能是最底层列表的header）</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span>} <font color=#008000>//体会：得益于哨兵的设置，哪些环节被简化了？</font>
</b></p></pre>
</body>
</html>
