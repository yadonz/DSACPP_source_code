<html>
<head>
<title>pq_complheap.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#800080>#include "PQ/PQ.h" </font><font color=#008000>//按照优先级队列ADT实现的</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#800080>#include "Vector/Vector.h" </font><font color=#008000>//借助多重继承机制，基于向量</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#0000FF>struct</font> PQ_ComplHeap : <font color=#0000FF>public</font> PQ<font color=#AA5500>&lt;</font>T&gt;, <font color=#0000FF>public</font> Vector<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> { <font color=#008000>//完全二叉堆</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>   PQ_ComplHeap() {} <font color=#008000>//默认构造</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>   PQ_ComplHeap( T<font color=#AA5500>*</font> A, Rank n ) { copyFrom( A, 0, n ); heapify( _elem, n ); } <font color=#008000>//批量构造</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>   <font color=#0000FF>void</font> insert( T ); <font color=#008000>//按照比较器确定的优先级次序，插入词条</font>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span>   T getMax(); <font color=#008000>//读取优先级最高的词条</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span>   T delMax(); <font color=#008000>//删除优先级最高的词条</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span>}; <font color=#008000>// PQ_ComplHeap</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> <font color=#0000FF>void</font> heapify( T<font color=#AA5500>*</font> A, Rank n ); <font color=#008000>// Floyd建堆算法</font>
<span class="line_num"><font color=#e8e8e8>00</font>11 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> Rank percolateDown( T<font color=#AA5500>*</font> A, Rank n, Rank i ); <font color=#008000>//下滤</font>
<span class="line_num"><font color=#e8e8e8>00</font>12 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> Rank percolateUp( T<font color=#AA5500>*</font> A, Rank i ); <font color=#008000>//上滤</font>
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>
</b></p></pre>
</body>
</html>
