<html>
<head>
<title>depq_test.cpp</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span><font color=#008000> * Test of DEPQ</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span><font color=#800080>#include "DEPQ_test.h"</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span><font color=#800080>#include &lt;windows.h&gt;</font>
<span class="line_num"><font color=#e8e8e8>000</font>6 </span>
<span class="line_num"><font color=#e8e8e8>000</font>7 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>000</font>8 </span><font color=#008000> * 针对基于列表、向量以及左式堆实现的优先级队列，做过程统一的测试</font>
<span class="line_num"><font color=#e8e8e8>000</font>9 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>00</font>10 </span><font color=#0000FF>void</font> verifySMMH( SMMH<font color=#AA5500>&lt;</font><font color=#0000FF>int</font><font color=#AA5500>&gt;</font> H ) {
<span class="line_num"><font color=#e8e8e8>00</font>11 </span>   Rank s <font color=#AA5500>=</font> H.size(); Rank k <font color=#AA5500>=</font> 0;
<span class="line_num"><font color=#e8e8e8>00</font>12 </span>   <font color=#0000FF>while</font> ( ++k <font color=#AA5500>&lt;</font> s ) {
<span class="line_num"><font color=#e8e8e8>00</font>13 </span>      <font color=#0000FF>if</font> ( isLC(k) && sib(k) <font color=#AA5500>&lt;</font> s  &&  H<font color=#AA5500>[</font>k<font color=#AA5500>]</font> <font color=#AA5500>&gt;</font> H<font color=#AA5500>[</font>sib(k)] ) <font color=#0000FF>break</font>; <font color=#008000>//Property #0</font>
<span class="line_num"><font color=#e8e8e8>00</font>14 </span>      <font color=#0000FF>if</font> ( isLC(k) && lc(k) <font color=#AA5500>&lt;</font> s && H<font color=#AA5500>[</font>k<font color=#AA5500>]</font> <font color=#AA5500>&gt;</font> H<font color=#AA5500>[</font>lc(k)] ) <font color=#0000FF>break</font>; <font color=#008000>//Property #1</font>
<span class="line_num"><font color=#e8e8e8>00</font>15 </span>      <font color=#0000FF>if</font> ( isLC(k) && ln(k) <font color=#AA5500>&lt;</font> s && H<font color=#AA5500>[</font>k<font color=#AA5500>]</font> <font color=#AA5500>&gt;</font> H<font color=#AA5500>[</font>ln(k)] ) <font color=#0000FF>break</font>;
<span class="line_num"><font color=#e8e8e8>00</font>16 </span>      <font color=#0000FF>if</font> ( isRC(k) && rc(k) <font color=#AA5500>&lt;</font> s && H<font color=#AA5500>[</font>k<font color=#AA5500>]</font> <font color=#AA5500>&lt;</font> H<font color=#AA5500>[</font>rc(k)] ) <font color=#0000FF>break</font>; <font color=#008000>//Property #2</font>
<span class="line_num"><font color=#e8e8e8>00</font>17 </span>      <font color=#0000FF>if</font> ( isRC(k) && rn(k) <font color=#AA5500>&lt;</font> s && H<font color=#AA5500>[</font>k<font color=#AA5500>]</font> <font color=#AA5500>&lt;</font> H<font color=#AA5500>[</font>rn(k)] ) <font color=#0000FF>break</font>;
<span class="line_num"><font color=#e8e8e8>00</font>18 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>19 </span>   <font color=#0000FF>if</font> ( k <font color=#AA5500>&lt;</font> s ) { print(H); printf(<font color=#FF00FF>"SMMP invalid at H[%d] = %d\n"</font>, k, H<font color=#AA5500>[</font>k]); exit(-1); }
<span class="line_num"><font color=#e8e8e8>00</font>20 </span>}
<span class="line_num"><font color=#e8e8e8>00</font>21 </span>
<span class="line_num"><font color=#e8e8e8>00</font>22 </span><font color=#0000FF>void</font> testSMMH( Rank n ) {
<span class="line_num"><font color=#e8e8e8>00</font>23 </span>   SMMH<font color=#AA5500>&lt;</font><font color=#0000FF>int</font><font color=#AA5500>&gt;</font> H; <font color=#008000>//init an empty DEPQ implemented as an SMMH</font>
<span class="line_num"><font color=#e8e8e8>00</font>24 </span>   <font color=#0000FF>while</font> ( H.size() <font color=#AA5500>&lt;</font> n ) { <font color=#008000>//随机测试</font>
<span class="line_num"><font color=#e8e8e8>00</font>25 </span>      <font color=#0000FF>if</font> ( dice ( 100 ) <font color=#AA5500>&lt;</font> 70 ) { <font color=#008000>//insert with a prob. of 70%</font>
<span class="line_num"><font color=#e8e8e8>00</font>26 </span>         <font color=#0000FF>int</font> e <font color=#AA5500>=</font> dice ( 7 <font color=#AA5500>*</font> n );
<span class="line_num"><font color=#e8e8e8>00</font>27 </span>         H.insert ( e );
<span class="line_num"><font color=#e8e8e8>00</font>28 </span>      } <font color=#0000FF>else</font> { <font color=#008000>//delMin or delMax with a prob. of 15% resp.</font>
<span class="line_num"><font color=#e8e8e8>00</font>29 </span>         <font color=#0000FF>if</font> ( 1 <font color=#AA5500>&lt;</font> H.size() )
<span class="line_num"><font color=#e8e8e8>00</font>30 </span>            <font color=#0000FF>if</font> ( dice( 100 ) <font color=#AA5500>&lt;</font> 50 ) {
<span class="line_num"><font color=#e8e8e8>00</font>31 </span>               <font color=#0000FF>int</font> e <font color=#AA5500>=</font> H.delMin();
<span class="line_num"><font color=#e8e8e8>00</font>32 </span>            } <font color=#0000FF>else</font> {
<span class="line_num"><font color=#e8e8e8>00</font>33 </span>               <font color=#0000FF>int</font> e <font color=#AA5500>=</font> H.delMax();
<span class="line_num"><font color=#e8e8e8>00</font>34 </span>            }
<span class="line_num"><font color=#e8e8e8>00</font>35 </span>      }
<span class="line_num"><font color=#e8e8e8>00</font>36 </span>      verifySMMH( H );
<span class="line_num"><font color=#e8e8e8>00</font>37 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>38 </span>   <font color=#0000FF>while</font> ( 1 <font color=#AA5500>&lt;</font> H.size() ) { <font color=#008000>//delMin or delMax with a prob. of 50% resp.</font>
<span class="line_num"><font color=#e8e8e8>00</font>39 </span>      <font color=#0000FF>if</font> ( dice( 100 ) <font color=#AA5500>&lt;</font> 50 ) {
<span class="line_num"><font color=#e8e8e8>00</font>40 </span>         <font color=#0000FF>int</font> e <font color=#AA5500>=</font> H.delMin();
<span class="line_num"><font color=#e8e8e8>00</font>41 </span>      } <font color=#0000FF>else</font> {
<span class="line_num"><font color=#e8e8e8>00</font>42 </span>         <font color=#0000FF>int</font> e <font color=#AA5500>=</font> H.delMax();
<span class="line_num"><font color=#e8e8e8>00</font>43 </span>      }
<span class="line_num"><font color=#e8e8e8>00</font>44 </span>      verifySMMH( H );
<span class="line_num"><font color=#e8e8e8>00</font>45 </span>      <font color=#0000FF>if</font> ( H.size() <font color=#AA5500>&lt;</font> 16 ) { print(H); printf(<font color=#FF00FF>"\n"</font>); }
<span class="line_num"><font color=#e8e8e8>00</font>46 </span>   }
<span class="line_num"><font color=#e8e8e8>00</font>47 </span>}
<span class="line_num"><font color=#e8e8e8>00</font>48 </span>
<span class="line_num"><font color=#e8e8e8>00</font>49 </span><font color=#008000>/******************************************************************************************</font>
<span class="line_num"><font color=#e8e8e8>00</font>50 </span><font color=#008000> * 优先级队列测试</font>
<span class="line_num"><font color=#e8e8e8>00</font>51 </span><font color=#008000> ******************************************************************************************/</font>
<span class="line_num"><font color=#e8e8e8>00</font>52 </span><font color=#0000FF>int</font> main ( <font color=#0000FF>int</font> argc, <font color=#0000FF>char</font><font color=#AA5500>*</font> argv[] ) {
<span class="line_num"><font color=#e8e8e8>00</font>53 </span>   <font color=#0000FF>if</font> ( 2 <font color=#AA5500>&gt;</font> argc ) { printf ( <font color=#FF00FF>"Usage: %s &lt;size of test&gt;\a\a\n"</font>, argv<font color=#AA5500>[</font>0<font color=#AA5500>]</font> ); <font color=#0000FF>return</font> 1; }
<span class="line_num"><font color=#e8e8e8>00</font>54 </span>   srand((<font color=#0000FF>unsigned</font> <font color=#0000FF>int</font>)time(NULL)); <font color=#008000>//随机种子</font>
<span class="line_num"><font color=#e8e8e8>00</font>55 </span><font color=#008000>   //srand( 31415926 ); //固定种子（假种子，调试用）</font>
<span class="line_num"><font color=#e8e8e8>00</font>56 </span><font color=#800080>#if defined(DSA_DEPQ_SMMH)</font>
<span class="line_num"><font color=#e8e8e8>00</font>57 </span>   testSMMH( atoi ( argv<font color=#AA5500>[</font>1<font color=#AA5500>]</font> ) ); <font color=#008000>//词条类型可在此指定</font>
<span class="line_num"><font color=#e8e8e8>00</font>58 </span><font color=#800080>#else</font>
<span class="line_num"><font color=#e8e8e8>00</font>59 </span>   printf ( <font color=#FF00FF>"PQ type not defined yet\n"</font> );
<span class="line_num"><font color=#e8e8e8>00</font>60 </span><font color=#800080>#endif</font>
<span class="line_num"><font color=#e8e8e8>00</font>61 </span>   <font color=#0000FF>return</font> 0;
<span class="line_num"><font color=#e8e8e8>00</font>62 </span>}
</b></p></pre>
</body>
</html>
