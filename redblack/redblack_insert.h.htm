<html>
<head>
<title>redblack_insert.h</title>
<meta http-equiv="content-type" content="text/html; charset=GBK">
<style type="text/css">
<!--.line_num {color: #666666; background-color: #E8E8E8;}//-->
</style>
</head>
<body bgcolor=#FFFFFF text=#000000>
<pre style="font: 16pt consolas, 微软雅黑;"><b><p style="line-height: 150%">
<span class="line_num"><font color=#e8e8e8>000</font>1 </span><font color=#0000FF>template</font> <font color=#AA5500>&lt;</font><font color=#0000FF>typename</font> T<font color=#AA5500>&gt;</font> BinNodePosi<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> RedBlack<font color=#AA5500>&lt;</font>T&gt;::insert( <font color=#0000FF>const</font> T& e ) { <font color=#008000>//将e插入红黑树</font>
<span class="line_num"><font color=#e8e8e8>000</font>2 </span>   BinNodePosi<font color=#AA5500>&lt;</font>T&gt;& x <font color=#AA5500>=</font> search( e ); <font color=#0000FF>if</font> ( x ) <font color=#0000FF>return</font> x; <font color=#008000>//确认目标不存在（留意对_hot的设置）</font>
<span class="line_num"><font color=#e8e8e8>000</font>3 </span>   x <font color=#AA5500>=</font> <font color=#0000FF>new</font> BinNode<font color=#AA5500>&lt;</font>T&gt;( e, _hot, NULL, NULL, 0 ); _size++; <font color=#008000>//创建红节点x：以_hot为父，黑高度0</font>
<span class="line_num"><font color=#e8e8e8>000</font>4 </span>   BinNodePosi<font color=#AA5500>&lt;</font>T<font color=#AA5500>&gt;</font> xOld <font color=#AA5500>=</font> x; solveDoubleRed( x ); <font color=#0000FF>return</font> xOld; <font color=#008000>//经双红修正后，即可返回</font>
<span class="line_num"><font color=#e8e8e8>000</font>5 </span>} <font color=#008000>//无论e是否存在于原树中，返回时总有x-&gt;data == e</font>
</b></p></pre>
</body>
</html>
